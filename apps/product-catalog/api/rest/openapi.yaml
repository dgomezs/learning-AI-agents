openapi: 3.1.0
info:
  title: Product Catalog Service API
  description: API for managing product catalog information
  version: 1.0.0
  contact:
    name: Product Team
    email: product-team@example.com
servers:
  - url: http://localhost:8080
    description: Development server
paths:
  /brands:
    get:
      summary: List all brands
      operationId: listBrands
      tags:
        - brands
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: List of brands
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandPageResponse'
    post:
      summary: Create a new brand
      operationId: createBrand
      tags:
        - brands
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBrandRequest'
      responses:
        201:
          description: Brand created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandResponse'
        400:
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /brands/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get brand by ID
      operationId: getBrandById
      tags:
        - brands
      responses:
        200:
          description: Brand details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandResponse'
        404:
          description: Brand not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateBrandRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 500
        website:
          type: string
          format: uri
          maxLength: 255
        logoUrl:
          type: string
          format: uri
          maxLength: 255
          
    BrandResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        website:
          type: string
          format: uri
        logoUrl:
          type: string
          format: uri
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          
    BrandPageResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/BrandResponse'
        pageNumber:
          type: integer
        pageSize:
          type: integer
        totalElements:
          type: integer
        totalPages:
          type: integer
          
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        detail:
          type: string
        timestamp:
          type: string
          format: date-time
        path:
          type: string
